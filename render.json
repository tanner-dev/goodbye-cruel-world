{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "defaultValue": "deleteme.ct.dev",
      "type": "string"
    },
    "actionName": {
      "defaultValue": "render",
      "type": "string"
    },
    "osProfileAdminUserName": {
      "type": "string"
    },
    "osProfileAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {

    //
    // Choose an existing Resource Group (If Resource Group does not exist, specify name in Pipeline Variable)
    "rgCommon": "[concat(parameters('environmentName'), '.common')]",
    "rgMain": "[concat(parameters('environmentName'), '.render')]",
    "rgDnsLocation": "deleteme.ct.dnszone",
    //
    // DNS Zone *** MUST EXIST ***
    "dnsZone_Name": "deleteme.lazlo.io",
    //
    // CNAME tied to DNS Zone
    "cName": "dev.render-deleteme",
    //
    // Azure Subscription GUID
    "subscriptionIdGuid": "be4c9638-e57a-4393-a2c3-c604ccb0bb3a",
    "computeLocation": "southcentralus",
    // BEGIN Traffic Manager
    "trafficManagerName": "deleteme-devrender",
    "relativeName": "deleteme-devrender",
    "trafficRoutingMethod": "Performance",
    "maxReturn": 0,
    // BEGIN Endpoints
    "endpoint_name001": "dev.render.southcentralus",
    "endpoint_name002": "dev.render.northcentralus",
    // Begin Traffic Manager
    "trafficManagerProfiles_id": "[concat('/subscriptions/', variables('subscriptionIdGuid'), '/resourceGroups/', variables('rgCommon'), '/providers/Microsoft.Network/trafficManagerProfiles/', variables('trafficManagerName'), '/azureEndpoints/')]",
    //
    "dnsName": "[concat(variables('clusterPurposeName'), variables('environment'))]",
    "clusterName": "[concat(variables('environment'), variables('clusterPurposeAbreviated'), variables('clusterInstanceAbbreviated'))]",
    "applicationtLogStorageAccountName": "[concat(variables('clusterName'), 'log')]",
    "applicationDiagnosticsStorageAccountName": "[concat(variables('clusterName'), 'dgnstc')]",
    "lbName": "[concat(variables('clusterName'), 'lb')]",
    "lbIPName": "[concat(variables('lbName'), 'ip')]",
    "nicName": "[concat(variables('clusterName'), 'nic')]",
    "virtualNetworkName": "[concat(variables('clusterName'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    //
    // IP Addresses (More Public IP Address can be added ** Looking into adding via an Array)
    "publicIPAddressRenderName": "[concat(variables('clusterName'), 'render', 'pubip')]",
    "publicIPAddressRender0": "[concat(variables('publicIPAddressRenderName'), '0')]",
    "publicIPAddressAnnotateName": "[concat(variables('clusterName'), 'annotate', 'pubip')]",
    "publicIPAddressAnnotate0": "[concat(variables('publicIPAddressAnnotateName'), '0')]",
    //
    "dnsNameAnnotate": "[concat('annotate', variables('environment'))]",
    "subnet0Name": "[concat(variables('clusterName'),'Subnet', '0')]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('lbName')))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfigRender')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]",
    "vaultId": "[concat('/subscriptions/be4c9638-e57a-4393-a2c3-c604ccb0bb3a/resourceGroups/',variables('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/',variables('vaultName'))]",
    //
    // *** HARD CODED VARIABLES ***
    //
    "reliabilityLevel": "Silver",
    "clusterPurposeName": "render",
    "clusterPurposeAbreviated": "rndr",
    "environment": "devrender",
    "clusterInstanceName": "primary",
    "clusterInstanceAbbreviated": "prmry",
    "clusterApplication": "ca9e36df-7baa-41d2-a356-e6825d114523",
    "clientApplication": "8b87902f-8f5e-40f7-b8c4-fbc94b263e3a",
    "applicationInsightsKey": "2d07a252-0886-4d53-9a0c-ef3c2a7371de",
    "nt0applicationStartPort": 20000,
    "nt0applicationEndPort": 30000,
    "nt0ephemeralStartPort": 49152,
    "nt0ephemeralEndPort": 65534,
    "nt0fabricTcpGatewayPort": 19000,
    "nt0fabricHttpGatewayPort": 19080,
    "subnet0Prefix": "10.0.0.0/24",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "addressPrefix": "10.0.0.0/16",
    "overProvision": "false",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "vmImageOffer": "WindowsServer",
    "vmImageSku": "2016-Datacenter",
    "vmImageVersion": "latest",
    "storageAccountType": "Standard_LRS",
    "applicationLogStorageAccountType": "Standard_LRS",
    "applicationDiagnosticsStorageAccountType": "Standard_LRS",
    "nt0InstanceCount": 5,
    "vmNodeType0Name": "core",
    "vmNodeType0Size": "Standard_D2_v2",
    "vaultName": "lazlo326-us-sc",
    "vaultResourceGroup": "lazlo326",
    "settingsCertificateName": "https://lazlo326-us-sc.vault.azure.net/secrets/devsettings/054d1329fcd24b299c04a76c6abba759",
    "managementCertificateThumbprint": "472D0F31473571C3449878869B06579ACC842B5C",
    "lazloCertificateName": "https://lazlo326-us-sc.vault.azure.net/secrets/sflazloio/998aff5a261b4fbfb6523d2b4b2662c6",
    "vmssApiVersion": "2017-03-30",
    "lbApiVersion": "2015-06-15",
    "vNetApiVersion": "2015-06-15",
    "storageApiVersion": "2017-10-01",
    "publicIPApiVersion": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "nestedCnameTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('rgDnsLocation')]",
      "subscriptionId": "[variables('subscriptionIdGuid')]",
      "properties": {
        "mode": "Incremental",
        "debugSetting": {
          "detailLevel": "requestContent, responseContent"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "comments": "Generalized from resource: '/subscriptions/be4c9638-e57a-4393-a2c3-c604ccb0bb3a/resourceGroups/dnstest_resources_deleteme/providers/Microsoft.Network/dnszones/deleteme.com/CNAME/testcname'.",
              "type": "Microsoft.Network/dnszones/CNAME",
              "name": "[concat(variables('dnsZone_Name'), '/', variables('cName'))]",
              "apiVersion": "2018-05-01",
              "scale": null,
              "properties": {
                "TTL": 3600,
                "CNAMERecord": {
                  // *** !!REMOVE HARD CODED VALUE!! ***
                  //
                  // *** This is a TEST to confirm that we can override PARAMETERS via Pipeline Deployment
                  "cname": "[concat(parameters('environmentName'), '.', parameters('actionName'), '.', variables('dnsZone_Name'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressRender0'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressAnnotate0'))]"
      ]
    },
    {
      // This Nested Resource will create:
      //    1. A CNAME for an existing DNS Zone
      //    2. A Traffic Manager w/ EndPoints
      //    3. Assigns a Target Resource to each EndPoint

      "apiVersion": "2017-05-10",
      "name": "nestedCommonTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('rgCommon')]",
      "subscriptionId": "[variables('subscriptionIdGuid')]",
      "properties": {
        "mode": "Incremental",
        "debugSetting": {
          "detailLevel": "requestContent, responseContent"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            //
            // Add EndPoints to Traffic Manager
            {
              "apiVersion": "2018-04-01",
              "type": "Microsoft.Network/trafficmanagerprofiles",
              "name": "[variables('trafficManagerName')]",
              "location": "global",
              "properties": {
                "trafficRoutingMethod": "[variables('trafficRoutingMethod')]",
                "maxReturn": "[variables('maxReturn')]",
                "dnsConfig": {
                  "relativeName": "[variables('relativeName')]",
                  "ttl": "60"
                },
                "monitorConfig": {
                  "protocol": "http",
                  "port": "80",
                  "path": "/"
                },
                "endpoints": [
                  {
                    // EndPoint ties into 'publicIPAddressRender0'
                    "id": "[concat(variables('trafficManagerProfiles_id'), variables('endpoint_name001'))]",
                    "name": "[variables('endpoint_name001')]",
                    "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                    "properties": {
                      "endpointStatus": "Enabled",
                      "endpointMonitorStatus": null,
                      "targetResourceId": "[resourceId(variables('rgMain'), 'Microsoft.Network/publicIPAddresses', variables('publicIPAddressRender0'))]",
                      "target": "[concat(variables('trafficManagerName'), variables('publicIPAddressRender0'), '.southcentralus.cloudapp.azure.com')]",
                      "weight": 1,
                      "priority": 1,
                      "endpointLocation": "South Central US"
                    }
                  },
                  {
                    // EndPoint ties into 'publicIPAddressAnnotate0'
                    "id": "[concat(variables('trafficManagerProfiles_id'), variables('endpoint_name002'))]",
                    "name": "[variables('endpoint_name002')]",
                    "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                    "properties": {
                      "endpointStatus": "Enabled",
                      "endpointMonitorStatus": null,
                      "targetResourceId": "[resourceId(variables('rgMain'), 'Microsoft.Network/publicIPAddresses',  variables('publicIPAddressAnnotate0'))]",
                      "target": "[concat(variables('trafficManagerName'), variables('publicIPAddressAnnotate0'), '.southcentralus.cloudapp.azure.com')]",
                      "weight": 1,
                      "priority": 2,
                      "endpointLocation": "South Central US"
                    }
                  }
                ],
                "trafficViewEnrollmentStatus": "Disabled"
              },
              "dependsOn": []
            }
          ]
        }
      }
      //"dependsOn": [
      //  "[resourceId('Microsoft.Resources/deployments', 'nestedCnameTemplate')]"
      //]
    },
    //
    // ORIGINAL 'sfcrndr.json' Resource are BELOW
    //
    //{
    //  "type": "Microsoft.Authorization/locks",
    //  "apiVersion": "2015-01-01",
    //  "name": "[concat(resourceGroup().name, 'opslock')]",
    //  "properties": {
    //    "level": "ReadOnly",
    //    "notes": "WARNING: This resource is generated via ARM templates. You have no reason to modify or delete the configuration. Contact operations@lazlo.io for action on this resource. If you make an unauthorized change, you will be terminated for cause. No exceptions."
    //  },
    //  "dependsOn": [
    //    "[concat('Microsoft.ServiceFabric/clusters/', variables('clusterName'))]",
    //    "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('clusterName'), 'vmss', variables('vmNodeType0Name'))]"
    //  ]
    //},
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[variables('applicationLogStorageAccountType')]"
      },
      "kind": "Storage",
      "name": "[variables('applicationtLogStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[variables('computeLocation')]",
      "tags": {
        "displayName": "logs",
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[variables('applicationDiagnosticsStorageAccountType')]"
      },
      "kind": "Storage",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[variables('computeLocation')]",
      "tags": {
        "displayName": "diagnostics",
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {},
      "dependsOn": []
    },
    //{
    //  "type": "Microsoft.Network/virtualNetworks",
    //  "name": "[variables('virtualNetworkName')]",
    //  "apiVersion": "[variables('vNetApiVersion')]",
    //  "location": "[variables('computeLocation')]",
    //  "tags": {
    //    "environment": "[variables('environment')]",
    //    "resourceType": "Service Fabric",
    //    "clusterName": "[variables('clusterName')]"
    //  },
    //  "properties": {
    //    "addressSpace": {
    //      "addressPrefixes": [
    //        "[variables('addressPrefix')]"
    //      ]
    //    },
    //    "subnets": [
    //      {
    //        "name": "[variables('subnet0Name')]",
    //        "properties": {
    //          "addressPrefix": "[variables('subnet0Prefix')]"
    //        }
    //      }
    //    ]
    //  },
    //  "dependsOn": []
    //},
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressRender0')]",
      "apiVersion": "[variables('publicIPApiVersion')]",
      "location": "[variables('computeLocation')]",
      "tags": {
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsName')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressAnnotate0')]",
      "apiVersion": "[variables('publicIPApiVersion')]",
      "location": "[variables('computeLocation')]",
      "tags": {
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameAnnotate')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "apiVersion": "[variables('lbApiVersion')]",
      "location": "[variables('computeLocation')]",
      "tags": {
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfigRender",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressRender0'))]"
              }
            }
          },
          {
            "name": "LoadBalancerIPConfigAnnotate",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressAnnotate0'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "FabricDeployRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricManagementHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          //{
          //  "name": "[concat('publichttpsrule', parameters('clusterPurposeName'))]",
          //  "properties": {
          //    "backendAddressPool": {
          //      "id": "[variables('lbPoolID0')]"
          //    },
          //    "backendPort": 8443,
          //    "enableFloatingIP": false,
          //    "frontendIPConfiguration": {
          //      "id": "[variables('lbIPConfig0')]"
          //    },
          //    "frontendPort": 443,
          //    "loadDistribution": "SourceIPProtocol",
          //    "idleTimeoutInMinutes": 15,
          //    "probe": {
          //      "id": "[variables('lbHttpProbeID0')]"
          //    },
          //    "protocol": "Tcp"
          //  }
          //},
          {
            "name": "AnnotatorHttpsRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 9443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 443,
              "loadDistribution": "SourceIPProtocol",
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "AnnotatorHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 8080,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 80,
              "loadDistribution": "SourceIPProtocol",
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "RenderHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 7502,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 7502,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPortRangeEnd": 4500,
              "frontendPortRangeStart": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressRender0'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressAnnotate0'))]"
      ]
    },
    //{
    //  "type": "Microsoft.Compute/virtualMachineScaleSets",
    //  "sku": {
    //    "name": "[variables('vmNodeType0Size')]",
    //    "capacity": "[variables('nt0InstanceCount')]",
    //    "tier": "Standard"
    //  },
    //  "name": "[concat(variables('clusterName'), 'vmss', variables('vmNodeType0Name'))]",
    //  "apiVersion": "[variables('vmssApiVersion')]",
    //  "location": "[variables('computeLocation')]",
    //  "identity": {
    //    "type": "SystemAssigned"
    //  },
    //  "tags": {
    //    "environment": "[variables('environment')]",
    //    "resourceType": "Service Fabric",
    //    "clusterName": "[variables('clusterName')]"
    //  },
    //  "properties": {
    //    "overprovision": "[variables('overProvision')]",
    //    "upgradePolicy": {
    //      "mode": "Automatic"
    //    },
    //    "virtualMachineProfile": {
    //      "extensionProfile": {
    //        "extensions": [
    //          {
    //            "name": "[concat('ServiceFabricNode-', variables('vmNodeType0Name'))]",
    //            "properties": {
    //              "type": "ServiceFabricNode",
    //              "autoUpgradeMinorVersion": true,
    //              "protectedSettings": {
    //                "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationtLogStorageAccountName')),'2015-05-01-preview').key1]",
    //                "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationtLogStorageAccountName')),'2015-05-01-preview').key2]"
    //              },
    //              "publisher": "Microsoft.Azure.ServiceFabric",
    //              "settings": {
    //                "clusterEndpoint": "[reference(variables('clusterName')).clusterEndpoint]",
    //                "nodeTypeRef": "[variables('vmNodeType0Name')]",
    //                "dataPath": "D:\\\\SvcFab",
    //                "durabilityLevel": "Silver",
    //                "enableParallelJobs": true,
    //                "nicPrefixOverride": "[variables('subnet0Prefix')]",
    //                "certificate": {
    //                  "thumbprint": "[variables('managementCertificateThumbprint')]",
    //                  "x509StoreName": "My"
    //                }
    //              },
    //              "typeHandlerVersion": "1.0"
    //            }
    //          },
    //          {
    //            "name": "[concat('VMDiagnosticsVmExt-', variables('vmNodeType0Name'))]",
    //            "properties": {
    //              "type": "IaaSDiagnostics",
    //              "autoUpgradeMinorVersion": true,
    //              "protectedSettings": {
    //                "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
    //                "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
    //                "storageAccountEndPoint": "https://core.windows.net/"
    //              },
    //              "publisher": "Microsoft.Azure.Diagnostics",
    //              "settings": {
    //                "WadCfg": {
    //                  "DiagnosticMonitorConfiguration": {
    //                    "overallQuotaInMB": "50000",
    //                    "sinks": "applicationInsights",
    //                    "EtwProviders": {
    //                      "EtwEventSourceProviderConfiguration": [
    //                        {
    //                          "provider": "Microsoft-ServiceFabric-Actors",
    //                          "scheduledTransferKeywordFilter": "1",
    //                          "scheduledTransferPeriod": "PT5M",
    //                          "DefaultEvents": {
    //                            "eventDestination": "ServiceFabricReliableActorEventTable"
    //                          }
    //                        },
    //                        {
    //                          "provider": "Microsoft-ServiceFabric-Services",
    //                          "scheduledTransferPeriod": "PT5M",
    //                          "DefaultEvents": {
    //                            "eventDestination": "ServiceFabricReliableServiceEventTable"
    //                          }
    //                        }
    //                      ],
    //                      "EtwManifestProviderConfiguration": [
    //                        {
    //                          "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
    //                          "scheduledTransferLogLevelFilter": "Information",
    //                          "scheduledTransferKeywordFilter": "4611686018427387904",
    //                          "scheduledTransferPeriod": "PT5M",
    //                          "DefaultEvents": {
    //                            "eventDestination": "ServiceFabricSystemEventTable"
    //                          }
    //                        }
    //                      ]
    //                    }
    //                  },
    //                  "SinksConfig": {
    //                    "Sink": [
    //                      {
    //                        "name": "applicationInsights",
    //                        "ApplicationInsights": "[variables('applicationInsightsKey')]"
    //                      }
    //                    ]
    //                  }
    //                },
    //                "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
    //              },
    //              "typeHandlerVersion": "1.5"
    //            }
    //          },
    //          {
    //            "name": "LazloMasterScript",
    //            "properties": {
    //              "autoUpgradeMinorVersion": true,
    //              "settings": {
    //                "fileUris": [
    //                  "https://lazlo326.blob.core.windows.net/vmscripts/dotnet-install.ps1",
    //                  "https://lazlo326.blob.core.windows.net/vmscripts/SetEnvironmentVariable.ps1",
    //                  "https://lazlo326.blob.core.windows.net/vmscripts/Master.ps1"
    //                ],
    //                "commandToExecute": "[concat('powershell -NonInteractive -ExecutionPolicy Bypass -File Master.ps1 ActiveConfiguration ', variables('environment'))]"
    //              },
    //              "publisher": "Microsoft.Compute",
    //              "type": "CustomScriptExtension",
    //              "typeHandlerVersion": "1.4"
    //            }
    //          }
    //        ]
    //      },
    //      "networkProfile": {
    //        "networkInterfaceConfigurations": [
    //          {
    //            "name": "[concat(variables('nicName'), '-0')]",
    //            "properties": {
    //              "ipConfigurations": [
    //                {
    //                  "name": "[concat(variables('nicName'),'-',0)]",
    //                  "properties": {
    //                    "loadBalancerBackendAddressPools": [
    //                      {
    //                        "id": "[variables('lbPoolID0')]"
    //                      }
    //                    ],
    //                    "loadBalancerInboundNatPools": [
    //                      {
    //                        "id": "[variables('lbNatPoolID0')]"
    //                      }
    //                    ],
    //                    "subnet": {
    //                      "id": "[variables('subnet0Ref')]"
    //                    }
    //                  }
    //                }
    //              ],
    //              "primary": true
    //            }
    //          }
    //        ]
    //      },
    //      "osProfile": {
    //        "adminUsername": "[parameters('osProfileAdminUserName')]",
    //        "adminPassword": "[concat(parameters('osProfileAdminPassword'))]",
    //        "computernamePrefix": "[variables('vmNodeType0Name')]",
    //        "secrets": [
    //          {
    //            "sourceVault": {
    //              "id": "[variables('vaultId')]"
    //            },
    //            "vaultCertificates": [
    //              {
    //                "certificateUrl": "[variables('settingsCertificateName')]",
    //                "certificateStore": "My"
    //              },
    //              {
    //                "certificateUrl": "[variables('lazloCertificateName')]",
    //                "certificateStore": "My"
    //              }
    //            ]
    //          }
    //        ]
    //      },
    //      "storageProfile": {
    //        "imageReference": {
    //          "publisher": "[variables('vmImagePublisher')]",
    //          "offer": "[variables('vmImageOffer')]",
    //          "sku": "[variables('vmImageSku')]",
    //          "version": "[variables('vmImageVersion')]"
    //        },
    //        "osDisk": {
    //          "caching": "ReadOnly",
    //          "createOption": "FromImage",
    //          "managedDisk": {
    //            "storageAccountType": "[variables('storageAccountType')]"
    //          }
    //        },
    //        "dataDisks": [
    //          {
    //            "caching": "ReadOnly",
    //            "createOption": "Empty",
    //            "diskSizeGB": 256,
    //            "lun": 2,
    //            "managedDisk": {
    //              "storageAccountType": "Standard_LRS"
    //            }
    //          }
    //        ]
    //      }
    //    }
    //  },
    //  "dependsOn": [
    //    "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
    //    "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
    //    "[concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName'))]",
    //    "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
    //  ]
    //},
    {
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[variables('clusterName')]",
      "apiVersion": "2017-07-01-preview",
      "location": "[variables('computeLocation')]",
      "tags": {
        "environment": "[variables('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "addonFeatures": [
          "DnsService"
        ],
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": [],
        "diagnosticsStorageAccountConfig": {
          "protectedAccountKeyName": "StorageAccountKey1",
          "storageAccountName": "[variables('applicationtLogStorageAccountName')]",
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['blob']]",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['queue']]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['table']]"
        },
        "fabricSettings": [],
        "managementEndpoint": "[concat('https://',variables('dnsName'),'.sf.lazlo.io:',variables('nt0fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[variables('vmNodeType0Name')]",
            "applicationPorts": {
              "endPort": "[variables('nt0applicationEndPort')]",
              "startPort": "[variables('nt0applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "Silver",
            "ephemeralPorts": {
              "endPort": "[variables('nt0ephemeralEndPort')]",
              "startPort": "[variables('nt0ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
            "isPrimary": true,
            "vmInstanceCount": "[variables('nt0InstanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "[variables('reliabilityLevel')]",
        "upgradeMode": "Manual",
        "vmImage": "Windows",
        "certificate": {
          "thumbprint": "[variables('managementCertificateThumbprint')]",
          "x509StoreName": "My"
        },
        "azureActiveDirectory": {
          "tenantId": "96fb6ace-8227-4453-97e3-0eac201452e0",
          "clusterApplication": "[variables('clusterApplication')]",
          "clientApplication": "[variables('clientApplication')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "clusterProperties": {
      "type": "object",
      "value": "[reference(variables('clusterName'))]"
    },
    //"documentEndpoint": {
    //  "type": "string",
    //  "value": "[reference(variables('resourceId'), variables('apiVersion')).documentEndpoint]"
    //},
    //"accountKey": {
    //  "type": "string",
    //  "value": "[listKeys(variables('resourceId'), variables('apiVersion')).primaryMasterKey]"
    //},
    //"connectionString": {
    //  "type": "string",
    //  "value": "[concat('AccountEndpoint=https://', variables('cosmosDbAccount').name, '.documents.azure.com:443/;AccountKey=', listKeys(variables('resourceId'), variables('apiVersion')).primaryMasterKey, ';')]"
    //}
    //"cName": {
    //  "type": "object",
    //  "value": "[reference('nestedCnameTemplate').outputs.nestedCnameInfo.value]"
    //}
    "nestedCnameInfo": {
      "type": "object",
      "value": "[reference('nestedCnameTemplate')]"
    }
  }
} 