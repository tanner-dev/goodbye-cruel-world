﻿{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "reliabilityLevel": {
      "defaultValue": "Silver",
      "type": "string",
      "metadata": {
        "description": "silver/platinum"
      }
    },
    "clusterPurposeName": {
      "defaultValue": "render",
      "type": "string",
      "metadata": {
        "description": "render/gaming"
      }
    },
    "clusterPurposeAbreviated": {
      "defaultValue": "rndr",
      "type": "string",
      "metadata": {
        "description": "rndr/gmng"
      }
    },
    "environment": {
      "defaultValue": "devrender",
      "type": "string",
      "metadata": {
        "description": "devrender/loadrender/demorender/prorender"
      }
    },
    "clusterInstanceName": {
      "defaultValue": "primary",
      "type": "string",
      "metadata": {
        "description": "primary/secondary"
      }
    },
    "clusterInstanceAbbreviated": {
      "defaultValue": "prmry",
      "type": "string",
      "metadata": {
        "description": "prmry/scndry"
      }
    },
    "clusterApplication": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Cluster Application Id returned from keyvault application configuration"
      }
    },
    "clientApplication": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Client Application Id returned from keyvault application configuration"
      }
    },
    "applicationInsightsKey": {
      "type": "string",
      "metadata": {
        "description": "Application Insights Key"
      }
    },
    "nt0applicationStartPort": {
      "defaultValue": 20000,
      "type": "int"
    },
    "nt0applicationEndPort": {
      "defaultValue": 30000,
      "type": "int"
    },
    "nt0ephemeralStartPort": {
      "defaultValue": 49152,
      "type": "int"
    },
    "nt0ephemeralEndPort": {
      "defaultValue": 65534,
      "type": "int"
    },
    "nt0fabricTcpGatewayPort": {
      "defaultValue": 19000,
      "type": "int"
    },
    "nt0fabricHttpGatewayPort": {
      "defaultValue": 19080,
      "type": "int"
    },
    "subnet0Prefix": {
      "defaultValue": "10.0.0.0/24",
      "type": "string"
    },
    "computeLocation": {
      "type": "string"
    },
    "publicIPAddressType": {
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic"
      ],
      "type": "string"
    },
    "vmStorageAccountContainerName": {
      "defaultValue": "vhds",
      "type": "string"
    },
    "addressPrefix": {
      "defaultValue": "10.0.0.0/16",
      "type": "string"
    },
    "overProvision": {
      "defaultValue": "false",
      "type": "string"
    },
    "vmImagePublisher": {
      "defaultValue": "MicrosoftWindowsServer",
      "type": "string"
    },
    "vmImageOffer": {
      "defaultValue": "WindowsServer",
      "type": "string"
    },
    "vmImageSku": {
      "defaultValue": "2016-Datacenter",
      "type": "string"
    },
    "vmImageVersion": {
      "defaultValue": "latest",
      "type": "string"
    },
    "storageAccountType": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "Standard_GRS"
      ],
      "type": "string",
      "metadata": {
        "description": "Replication option for the VM image storage account"
      }
    },
    "applicationLogStorageAccountType": {
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "Standard_GRS"
      ],
      "type": "string",
      "metadata": {
        "description": "Replication option for the support log storage account"
      }
    },
    "applicationDiagnosticsStorageAccountType": {
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "Standard_GRS"
      ],
      "type": "string",
      "metadata": {
        "description": "Replication option for the application diagnostics storage account"
      }
    },
    "nt0InstanceCount": {
      "defaultValue": 5,
      "type": "int",
      "metadata": {
        "description": "Instance count for node type"
      }
    },
    "vmNodeType0Name": {
      "type": "string"
    },
    "vmNodeType0Size": {
      "defaultValue": "Standard_D2_v2",
      "type": "string"
    },
    "vaultName": {
      "type": "string"
    },
    "vaultResourceGroup": {
      "type": "string"
    },
    "settingsCertificateName": {
      "type": "string"
    },
    "managementCertificateThumbprint": {
      "type": "string"
    },
    "lazloCertificateName": {
      "type": "string"
    },
    "osProfileAdminUserName": {
      "type": "string"
    },
    "osProfileAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "dnsName": "[concat(parameters('clusterPurposeName'), parameters('environment'))]",
    "clusterName": "[concat(parameters('environment'), parameters('clusterPurposeAbreviated'), parameters('clusterInstanceAbbreviated'))]",
    "vmssApiVersion": "2017-03-30",
    "lbApiVersion": "2015-06-15",
    "vNetApiVersion": "2015-06-15",
    "storageApiVersion": "2017-10-01",
    "publicIPApiVersion": "2015-06-15",
    "applicationtLogStorageAccountName": "[concat(variables('clusterName'), 'log')]",
    "applicationDiagnosticsStorageAccountName": "[concat(variables('clusterName'), 'dgnstc')]",
    "lbName": "[concat(variables('clusterName'), 'lb')]",
    "lbIPName": "[concat(variables('lbName'), 'ip')]",
    "nicName": "[concat(variables('clusterName'), 'nic')]",
    "virtualNetworkName": "[concat(variables('clusterName'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "publicIPAddressRenderName": "[concat(variables('clusterName'), 'render', 'pubip')]",
    "publicIPAddressRender0": "[concat(variables('publicIPAddressRenderName'), '0')]",
    "publicIPAddressAnnotateName": "[concat(variables('clusterName'), 'annotate', 'pubip')]",
    "publicIPAddressAnnotate0": "[concat(variables('publicIPAddressAnnotateName'), '0')]",
    "dnsNameAnnotate": "[concat('annotate', parameters('environment'))]",
    "subnet0Name": "[concat(variables('clusterName'),'Subnet', '0')]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('lbName')))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfigRender')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]",
    "vaultId": "[concat('/subscriptions/be4c9638-e57a-4393-a2c3-c604ccb0bb3a/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/',parameters('vaultName'))]"
  },
  "resources": [
    //{
    //  "type": "Microsoft.Authorization/locks",
    //  "apiVersion": "2015-01-01",
    //  "name": "[concat(resourceGroup().name, 'opslock')]",
    //  "properties": {
    //    "level": "ReadOnly",
    //    "notes": "WARNING: This resource is generated via ARM templates. You have no reason to modify or delete the configuration. Contact operations@lazlo.io for action on this resource. If you make an unauthorized change, you will be terminated for cause. No exceptions."
    //  },
    //  "dependsOn": [
    //    "[concat('Microsoft.ServiceFabric/clusters/', variables('clusterName'))]",
    //    "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('clusterName'), 'vmss', parameters('vmNodeType0Name'))]"
    //  ]
    //},
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('applicationLogStorageAccountType')]"
      },
      "kind": "Storage",
      "name": "[variables('applicationtLogStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "displayName": "logs",
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('applicationDiagnosticsStorageAccountType')]"
      },
      "kind": "Storage",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "displayName": "diagnostics",
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "[variables('vNetApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet0Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet0Prefix')]"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressRender0'))]",
      "apiVersion": "[variables('publicIPApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsName')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressAnnotate0'))]",
      "apiVersion": "[variables('publicIPApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameAnnotate')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "apiVersion": "[variables('lbApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfigRender",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressRender0'))]"
              }
            }
          },
          {
            "name": "LoadBalancerIPConfigAnnotate",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressAnnotate0'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "FabricDeployRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricManagementHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": "[parameters('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": "[parameters('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          //{
          //  "name": "[concat('publichttpsrule', parameters('clusterPurposeName'))]",
          //  "properties": {
          //    "backendAddressPool": {
          //      "id": "[variables('lbPoolID0')]"
          //    },
          //    "backendPort": 8443,
          //    "enableFloatingIP": false,
          //    "frontendIPConfiguration": {
          //      "id": "[variables('lbIPConfig0')]"
          //    },
          //    "frontendPort": 443,
          //    "loadDistribution": "SourceIPProtocol",
          //    "idleTimeoutInMinutes": 15,
          //    "probe": {
          //      "id": "[variables('lbHttpProbeID0')]"
          //    },
          //    "protocol": "Tcp"
          //  }
          //},
          {
            "name": "AnnotatorHttpsRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 9443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 443,
              "loadDistribution": "SourceIPProtocol",
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "AnnotatorHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 8080,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 80,
              "loadDistribution": "SourceIPProtocol",
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "RenderHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('lbPoolID0')]"
              },
              "backendPort": 7502,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPort": 7502,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbHttpProbeID0')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('lbIPConfig0')]"
              },
              "frontendPortRangeEnd": 4500,
              "frontendPortRangeStart": 3389,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressRender0'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressAnnotate0'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "sku": {
        "name": "[parameters('vmNodeType0Size')]",
        "capacity": "[parameters('nt0InstanceCount')]",
        "tier": "Standard"
      },
      "name": "[concat(variables('clusterName'), 'vmss', parameters('vmNodeType0Name'))]",
      "apiVersion": "[variables('vmssApiVersion')]",
      "location": "[parameters('computeLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "overprovision": "[parameters('overProvision')]",
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat('ServiceFabricNode-', parameters('vmNodeType0Name'))]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationtLogStorageAccountName')),'2015-05-01-preview').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationtLogStorageAccountName')),'2015-05-01-preview').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(variables('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "[parameters('vmNodeType0Name')]",
                    "dataPath": "D:\\\\SvcFab",
                    "durabilityLevel": "Silver",
                    "enableParallelJobs": true,
                    "nicPrefixOverride": "[parameters('subnet0Prefix')]",
                    "certificate": {
                      "thumbprint": "[parameters('managementCertificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt-', parameters('vmNodeType0Name'))]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "sinks": "applicationInsights",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        }
                      },
                      "SinksConfig": {
                        "Sink": [
                          {
                            "name": "applicationInsights",
                            "ApplicationInsights": "[parameters('applicationInsightsKey')]"
                          }
                        ]
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              },
              {
                "name": "LazloMasterScript",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "https://lazlo326.blob.core.windows.net/vmscripts/InstallNetFx472.ps1",
                      "https://lazlo326.blob.core.windows.net/vmscripts/SetEnvironmentVariable.ps1",
                      "https://lazlo326.blob.core.windows.net/vmscripts/Master.ps1"
                    ],
                    "commandToExecute": "[concat('powershell -NonInteractive -ExecutionPolicy Bypass -File Master.ps1 ActiveConfiguration ', parameters('environment'))]"
                  },
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.4"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('nicName'), '-0')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('nicName'),'-',0)]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID0')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('lbNatPoolID0')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnet0Ref')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[parameters('osProfileAdminUserName')]",
            "adminPassword": "[concat(parameters('osProfileAdminPassword'))]",
            "computernamePrefix": "[parameters('vmNodeType0Name')]",
            "secrets": [
              {
                "sourceVault": {
                  "id": "[variables('vaultId')]"
                },
                "vaultCertificates": [
                  {
                    "certificateUrl": "[parameters('settingsCertificateName')]",
                    "certificateStore": "My"
                  },
                  {
                    "certificateUrl": "[parameters('lazloCertificateName')]",
                    "certificateStore": "My"
                  }
                ]
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('vmImagePublisher')]",
              "offer": "[parameters('vmImageOffer')]",
              "sku": "[parameters('vmImageSku')]",
              "version": "[parameters('vmImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('storageAccountType')]"
              }
            },
            "dataDisks": [
              {
                "caching": "ReadOnly",
                "createOption": "Empty",
                "diskSizeGB": 256,
                "lun": 2,
                "managedDisk": {
                  "storageAccountType": "Standard_LRS"
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[variables('clusterName')]",
      "apiVersion": "2017-07-01-preview",
      "location": "[parameters('computeLocation')]",
      "tags": {
        "environment": "[parameters('environment')]",
        "resourceType": "Service Fabric",
        "clusterName": "[variables('clusterName')]"
      },
      "properties": {
        "addonFeatures": [
          "DnsService"
        ],
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": [],
        "diagnosticsStorageAccountConfig": {
          "protectedAccountKeyName": "StorageAccountKey1",
          "storageAccountName": "[variables('applicationtLogStorageAccountName')]",
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['blob']]",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['queue']]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName')), '2017-10-01').primaryEndpoints['table']]"
        },
        "fabricSettings": [],
        "managementEndpoint": "[concat('https://',variables('dnsName'),'.sf.lazlo.io:',parameters('nt0fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[parameters('vmNodeType0Name')]",
            "applicationPorts": {
              "endPort": "[parameters('nt0applicationEndPort')]",
              "startPort": "[parameters('nt0applicationStartPort')]"
            },
            "clientConnectionEndpointPort": "[parameters('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "Silver",
            "ephemeralPorts": {
              "endPort": "[parameters('nt0ephemeralEndPort')]",
              "startPort": "[parameters('nt0ephemeralStartPort')]"
            },
            "httpGatewayEndpointPort": "[parameters('nt0fabricHttpGatewayPort')]",
            "isPrimary": true,
            "vmInstanceCount": "[parameters('nt0InstanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "[parameters('reliabilityLevel')]",
        "upgradeMode": "Manual",
        "vmImage": "Windows",
        "certificate": {
          "thumbprint": "[parameters('managementCertificateThumbprint')]",
          "x509StoreName": "My"
        },
        "azureActiveDirectory": {
          "tenantId": "96fb6ace-8227-4453-97e3-0eac201452e0",
          "clusterApplication": "[parameters('clusterApplication')]",
          "clientApplication": "[parameters('clientApplication')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationtLogStorageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "clusterProperties": {
      "type": "object",
      "value": "[reference(variables('clusterName'))]"
    }
  }
}